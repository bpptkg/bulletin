version: "3"

services:
  db:
    image: mysql:5.7
    container_name: bulletin_db
    volumes:
      - bulletin_mysql:/var/lib/mysql/
    restart: always
    env_file:
      - ./.env.docker

  app:
    build: .
    container_name: bulletin
    restart: always
    env_file:
      - ./.env.docker
    ports:
      - 8000:8000
    volumes:
      - ./storage/logs/:/app/storage/logs/
      - ./storage/media/:/app/storage/media/
      - ./storage/msd/:/app/storage/msd/
      - ./storage/run/:/app/storage/run/
      - ./storage/static/:/app/storage/static/
    command: "gunicorn --workers 4 --bind 0.0.0.0:8000 bulletin.wsgi:application"

  nginx:
    image: nginx:1.17
    container_name: bulletin_nginx
    restart: always
    ports:
      - 9056:80
    volumes:
      - ./conf/docker/bulletin.conf:/etc/nginx/conf.d/bulletin.conf
    depends_on:
      - app

  memcached:
    image: memcached
    container_name: bulletin_memcached
    restart: always
    expose:
      - "11211"
    entrypoint:
      - memcached
      - -m 64

  redis:
    image: redis:latest
    container_name: bulletin_redis

  celery:
    build: .
    container_name: bulletin_celery
    restart: always
    env_file:
      - ./.env.docker
    volumes:
      - ./storage/logs/:/app/storage/logs/
    command: "celery -A bulletin worker -l INFO -f /app/storage/logs/celery.log"
    depends_on:
      - redis
      - app

  celerybeat:
    build: .
    container_name: bulletin_celerybeat
    restart: always
    env_file:
      - ./.env.docker
    volumes:
      - ./storage/logs/:/app/storage/logs/
    command: "celery -A bulletin beat -l INFO -f /app/storage/logs/celerybeat.log"
    depends_on:
      - redis
      - app

volumes:
  bulletin_mysql:
